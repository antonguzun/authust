CREATE TABLE IF NOT EXISTS permissions (
    permission_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    permission_name text NOT NULL,
    created_at timestamptz NOT NULL,
    updated_at timestamptz NOT NULL,
    is_deleted boolean NOT NULL,
    UNIQUE(permission_name)
);

CREATE TABLE IF NOT EXISTS roles (
    role_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name text NOT NULL,
    created_at timestamptz NOT NULL,
    updated_at timestamptz NOT NULL,
    is_deleted boolean NOT NULL,
    UNIQUE(role_name)
);

CREATE TABLE IF NOT EXISTS role_permissions (
    permission_id int NOT NULL,
    role_id int NOT NULL,
    created_at timestamptz NOT NULL,
    updated_at timestamptz NOT NULL,
    is_deleted boolean NOT NULL,

    CONSTRAINT fk_permission FOREIGN KEY(permission_id) REFERENCES permissions(permission_id),
    CONSTRAINT fk_role FOREIGN KEY(role_id) REFERENCES roles(role_id),

    UNIQUE(permission_id, role_id)
);


-- auth service own roles:
INSERT INTO roles (role_name, created_at, updated_at, is_deleted)
VALUES 
('ROLE_AUTH_ADMIN', now(), now(), FALSE),
('ROLE_AUTH_MANAGER', now(), now(), FALSE),
('ROLE_AUTH_STAFF', now(), now(), FALSE)
ON CONFLICT DO NOTHING;


INSERT INTO permissions (permission_name, created_at, updated_at, is_deleted)
VALUES 
('READ_PERMISSION', now(), now(), FALSE),
('WRITE_PERMISSION', now(), now(), FALSE),
('READ_ROLE', now(), now(), FALSE),
('WRITE_ROLE', now(), now(), FALSE),
('BIND_ROLE_WITH_PERMISSION', now(), now(), FALSE),
('BIND_USER_WITH_ROLE', now(), now(), FALSE),
('READ_USER', now(), now(), FALSE),
('WRITE_USER', now(), now(), FALSE)
ON CONFLICT DO NOTHING;

CREATE OR REPLACE FUNCTION find_perm_id_by_name(text) RETURNS integer
    AS 'SELECT permission_id FROM permissions WHERE permission_name=$1;'
    LANGUAGE SQL
    IMMUTABLE
    RETURNS NULL ON NULL INPUT;

CREATE OR REPLACE FUNCTION find_role_id_by_name(text) RETURNS integer
    AS 'SELECT role_id FROM roles WHERE role_name=$1;'
    LANGUAGE SQL
    IMMUTABLE
    RETURNS NULL ON NULL INPUT;
    
INSERT INTO role_permissions (permission_id, role_id, created_at, updated_at, is_deleted)
    VALUES 
    (find_perm_id_by_name('WRITE_PERMISSION'), find_role_id_by_name('ROLE_AUTH_ADMIN'), now(), now(), FALSE),
    (find_perm_id_by_name('WRITE_ROLE'), find_role_id_by_name('ROLE_AUTH_ADMIN'), now(), now(), FALSE),
    (find_perm_id_by_name('BIND_ROLE_WITH_PERMISSION'), find_role_id_by_name('ROLE_AUTH_ADMIN'), now(), now(), FALSE),
    (find_perm_id_by_name('WRITE_USER'), find_role_id_by_name('ROLE_AUTH_ADMIN'), now(), now(), FALSE),
    (find_perm_id_by_name('BIND_USER_WITH_ROLE'), find_role_id_by_name('ROLE_AUTH_ADMIN'), now(), now(), FALSE),

    (find_perm_id_by_name('BIND_USER_WITH_ROLE'), find_role_id_by_name('ROLE_AUTH_MANAGER'), now(), now(), FALSE),
    (find_perm_id_by_name('WRITE_USER'), find_role_id_by_name('ROLE_AUTH_MANAGER'), now(), now(), FALSE),

    (find_perm_id_by_name('READ_PERMISSION'), find_role_id_by_name('ROLE_AUTH_ADMIN'), now(), now(), FALSE),
    (find_perm_id_by_name('READ_PERMISSION'), find_role_id_by_name('ROLE_AUTH_MANAGER'), now(), now(), FALSE),
    (find_perm_id_by_name('READ_ROLE'), find_role_id_by_name('ROLE_AUTH_ADMIN'), now(), now(), FALSE),
    (find_perm_id_by_name('READ_ROLE'), find_role_id_by_name('ROLE_AUTH_MANAGER'), now(), now(), FALSE),
    (find_perm_id_by_name('READ_USER'), find_role_id_by_name('ROLE_AUTH_ADMIN'), now(), now(), FALSE),
    (find_perm_id_by_name('READ_USER'), find_role_id_by_name('ROLE_AUTH_MANAGER'), now(), now(), FALSE),
    (find_perm_id_by_name('READ_USER'), find_role_id_by_name('ROLE_AUTH_STAFF'), now(), now(), FALSE)
ON CONFLICT DO NOTHING;
